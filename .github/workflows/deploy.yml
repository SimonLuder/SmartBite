name: Build and Push Docker Images

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests wandb

      - name: Download latest model weights
        env:
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
        run: |
          wandb login $WANDB_API_KEY
          wandb artifact get smartbite/smartbite/best_classifier_model:latest --root backend/src/static_files/
          sleep 10

      - name: Build backend Docker image
        run: |
          docker build -f backend/backend.dockerfile -t smartbite-backend .

      - name: Start backend service
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          NUTRITION_API_URL: ${{ secrets.NUTRITION_API_URL }}
        run: |
          docker run -d \
            --name smartbite-backend \
            -e CLIENT_ID \
            -e CLIENT_SECRET \
            -e NUTRITION_API_URL \
            -p 8000:8000 \
            smartbite-backend

      - name: Wait for backend to initialize
        run: |
          echo "Sleeping for 20 seconds to let the backend start up..."
          sleep 20

      - name: Run tests
        run: |
          pytest tests/

      - name: Stop backend service
        if: always()
        run: |
          docker stop smartbite-backend
          docker rm smartbite-backend

      - name: Upload model weights
        uses: actions/upload-artifact@v4
        with:
          name: model-weights
          path: backend/src/static_files/

  build-and-push:
    needs: tests # ensure tests are run before building images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend] # run the job for each service

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        uses: docker/login-action@v2 # log in to GitHub Container Registry
        with:
          registry: ghcr.io
          username: simonluder                       
          password: ${{ secrets.GHCR_PAT  }}

      - name: Download model weights
        if: matrix.service == 'backend'
        uses: actions/download-artifact@v4
        with:
          name: model-weights
          path: backend/src/static_files/

      - name: Build and push ${{ matrix.service }}
        run: |
          docker build -f ${{ matrix.service }}/${{ matrix.service }}.dockerfile -t ghcr.io/simonluder/smartbite-${{ matrix.service }}:latest .
          docker push ghcr.io/simonluder/smartbite-${{ matrix.service }}:latest
